// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// prettier-ignore
// @ts-ignore
import { DateResolver as Date } from 'graphql-scalars';
// prettier-ignore
// @ts-ignore
import { GraphQLID as ID } from 'graphql';
// prettier-ignore
// @ts-ignore
import { ArgsType, Field as TypeGraphQLField, Float, InputType as TypeGraphQLInputType, Int } from 'type-graphql';
// prettier-ignore
// @ts-ignore
import { registerEnumType, GraphQLISODateTime as DateTime } from "type-graphql";

// prettier-ignore
// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');
// prettier-ignore
// @ts-ignore

import { BaseWhereInput, JsonObject, PaginationArgs, DateOnlyString, DateTimeString, IDType } from '../../../';

// @ts-ignore

import { MyBaseModelTest } from "../base-model/my-base-model.model";

export enum MyBaseModelTestOrderByEnum {
  id_ASC = "id_ASC",
  id_DESC = "id_DESC"
}

registerEnumType(MyBaseModelTestOrderByEnum, {
  name: "MyBaseModelTestOrderByInput"
});

@TypeGraphQLInputType()
export class MyBaseModelTestWhereInput {
  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];
}

@TypeGraphQLInputType()
export class MyBaseModelTestWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class MyBaseModelTestCreateInput {
  @TypeGraphQLField()
  stringField!: string;
}

@TypeGraphQLInputType()
export class MyBaseModelTestUpdateInput {
  @TypeGraphQLField({ nullable: true })
  stringField?: string;
}

@ArgsType()
export class MyBaseModelTestWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => MyBaseModelTestWhereInput, { nullable: true })
  where?: MyBaseModelTestWhereInput;

  @TypeGraphQLField(() => MyBaseModelTestOrderByEnum, { nullable: true })
  orderBy?: MyBaseModelTestOrderByEnum;
}

@ArgsType()
export class MyBaseModelTestCreateManyArgs {
  @TypeGraphQLField(() => [MyBaseModelTestCreateInput])
  data!: MyBaseModelTestCreateInput[];
}

@ArgsType()
export class MyBaseModelTestUpdateArgs {
  @TypeGraphQLField() data!: MyBaseModelTestUpdateInput;
  @TypeGraphQLField() where!: MyBaseModelTestWhereUniqueInput;
}
