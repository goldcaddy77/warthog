type Author {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  ownerId: ID!
  firstName: String!
  posts: [Post!]!
}

input AuthorCreateInput {
  firstName: String!
}

enum AuthorOrderByInput {
  firstName_ASC
  firstName_DESC
  createdAt_ASC
  createdAt_DESC
  createdById_ASC
  createdById_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedById_ASC
  updatedById_DESC
  deletedAt_ASC
  deletedAt_DESC
  deletedById_ASC
  deletedById_DESC
  version_ASC
  version_DESC
  ownerId_ASC
  ownerId_DESC
  id_ASC
  id_DESC
}

input AuthorUpdateInput {
  firstName: String
}

input AuthorWhereInput {
  firstName_eq: String
  firstName_contains: String
  firstName_startsWith: String
  firstName_endsWith: String
  firstName_in: [String!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  version_eq: Int
  version_gt: Int
  version_gte: Int
  version_lt: Int
  version_lte: Int
  version_in: [Int!]
  ownerId_eq: ID
  ownerId_in: [ID!]
  id_in: [ID!]
}

input AuthorWhereUniqueInput {
  id: ID!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface DeleteResponse {
  id: ID!
}

type Mutation {
  createRole(data: RoleCreateInput!): Role!
  createUserRole(data: UserRoleCreateInput!): UserRole!
  createManyUserRoles(data: [UserRoleCreateInput!]!): [UserRole!]!
  createUser(data: UserCreateInput!): User!
  createAuthor(data: AuthorCreateInput!): Author!
  createPost(data: PostCreateInput!): Post!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  ownerId: ID!
  name: String!
  authors: [Author!]!
  posts: [Post!]!
}

input PostCreateInput {
  name: String!
}

enum PostOrderByInput {
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
  createdById_ASC
  createdById_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedById_ASC
  updatedById_DESC
  deletedAt_ASC
  deletedAt_DESC
  deletedById_ASC
  deletedById_DESC
  version_ASC
  version_DESC
  ownerId_ASC
  ownerId_DESC
  id_ASC
  id_DESC
}

input PostUpdateInput {
  name: String
}

input PostWhereInput {
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  version_eq: Int
  version_gt: Int
  version_gte: Int
  version_lt: Int
  version_lte: Int
  version_in: [Int!]
  ownerId_eq: ID
  ownerId_in: [ID!]
  id_in: [ID!]
}

input PostWhereUniqueInput {
  id: ID!
}

type Query {
  roles(offset: Int, limit: Int = 50, where: PostWhereInput, orderBy: PostOrderByInput): [Post!]!
  userRoles(offset: Int, limit: Int = 50, where: UserRoleWhereInput, orderBy: UserRoleOrderByInput): [UserRole!]!
  users(offset: Int, limit: Int = 50, where: UserWhereInput, orderBy: UserOrderByInput): [User!]!
  authors(offset: Int, limit: Int = 50, where: AuthorWhereInput, orderBy: AuthorOrderByInput): [Author!]!
}

type Role {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  ownerId: ID!
  name: String!
  userRoles: [UserRole!]!
}

input RoleCreateInput {
  name: String!
}

input RoleUpdateInput {
  name: String
}

input RoleWhereInput {
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  version_eq: Int
  version_gt: Int
  version_gte: Int
  version_lt: Int
  version_lte: Int
  version_in: [Int!]
  ownerId_eq: ID
  ownerId_in: [ID!]
  id_in: [ID!]
}

input RoleWhereUniqueInput {
  id: ID!
}

type StandardDeleteResponse {
  id: ID!
}

type User {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  ownerId: ID!
  firstName: String!
  userRoles: [UserRole!]!
}

input UserCreateInput {
  firstName: String!
}

enum UserOrderByInput {
  firstName_ASC
  firstName_DESC
  createdAt_ASC
  createdAt_DESC
  createdById_ASC
  createdById_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedById_ASC
  updatedById_DESC
  deletedAt_ASC
  deletedAt_DESC
  deletedById_ASC
  deletedById_DESC
  version_ASC
  version_DESC
  ownerId_ASC
  ownerId_DESC
  id_ASC
  id_DESC
}

type UserRole {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  ownerId: ID!
  user: User!
  userId: ID!
  role: Role!
  roleId: ID!
  otherMetadata: String
}

input UserRoleCreateInput {
  userId: ID!
  roleId: ID!
  otherMetadata: String
}

enum UserRoleOrderByInput {
  userId_ASC
  userId_DESC
  roleId_ASC
  roleId_DESC
  otherMetadata_ASC
  otherMetadata_DESC
  createdAt_ASC
  createdAt_DESC
  createdById_ASC
  createdById_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedById_ASC
  updatedById_DESC
  deletedAt_ASC
  deletedAt_DESC
  deletedById_ASC
  deletedById_DESC
  version_ASC
  version_DESC
  ownerId_ASC
  ownerId_DESC
  id_ASC
  id_DESC
}

input UserRoleUpdateInput {
  userId: ID
  roleId: ID
  otherMetadata: String
}

input UserRoleWhereInput {
  userId_eq: ID
  userId_in: [ID!]
  roleId_eq: ID
  roleId_in: [ID!]
  otherMetadata_eq: String
  otherMetadata_contains: String
  otherMetadata_startsWith: String
  otherMetadata_endsWith: String
  otherMetadata_in: [String!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  version_eq: Int
  version_gt: Int
  version_gte: Int
  version_lt: Int
  version_lte: Int
  version_in: [Int!]
  ownerId_eq: ID
  ownerId_in: [ID!]
  id_in: [ID!]
}

input UserRoleWhereUniqueInput {
  id: ID!
}

input UserUpdateInput {
  firstName: String
}

input UserWhereInput {
  firstName_eq: String
  firstName_contains: String
  firstName_startsWith: String
  firstName_endsWith: String
  firstName_in: [String!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  version_eq: Int
  version_gt: Int
  version_gte: Int
  version_lt: Int
  version_lte: Int
  version_in: [Int!]
  ownerId_eq: ID
  ownerId_in: [ID!]
  id_in: [ID!]
}

input UserWhereUniqueInput {
  id: ID!
}
