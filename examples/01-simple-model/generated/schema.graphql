interface BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

type BaseModel implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

type BaseModelUUID implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

input BaseWhereInput {
  id_eq: String
  id_in: [String!]
  createdAt_eq: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdById_eq: String
  updatedAt_eq: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedById_eq: String
  deletedAt_all: Boolean
  deletedAt_eq: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedById_eq: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface DeleteResponse {
  id: ID!
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  deleteUser(where: UserWhereUniqueInput!): StandardDeleteResponse!
}

type Query {
  users(offset: Int, limit: Int = 50, where: UserWhereInput, orderBy: UserOrderByInput): [User!]!
  user(where: UserWhereUniqueInput!): User!
}

type StandardDeleteResponse {
  id: ID!
}

type User implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  firstName: String!
  lastName: String
  email: String!
  age: Int!
  isRequired: Boolean!
  rating: Float!
  magicId: String!
  bypassMagicId: String!
}

input UserCreateInput {
  firstName: String!
  lastName: String
  email: String!
  age: Float!
  isRequired: Boolean!
  rating: Float!
  magicId: ID!
  bypassMagicId: String!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  email_ASC
  email_DESC
  age_ASC
  age_DESC
  isRequired_ASC
  isRequired_DESC
  rating_ASC
  rating_DESC
  magicId_ASC
  magicId_DESC
  bypassMagicId_ASC
  bypassMagicId_DESC
}

input UserUpdateInput {
  firstName: String
  lastName: String
  email: String
  age: Float
  isRequired: Boolean
  rating: Float
  magicId: ID
  bypassMagicId: String
}

input UserWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  firstName_eq: String
  firstName_contains: String
  firstName_startsWith: String
  firstName_endsWith: String
  firstName_in: [String!]
  lastName_eq: String
  lastName_contains: String
  lastName_startsWith: String
  lastName_endsWith: String
  lastName_in: [String!]
  email_eq: String
  email_contains: String
  email_startsWith: String
  email_endsWith: String
  email_in: [String!]
  age_eq: Float
  age_gt: Float
  age_gte: Float
  age_lt: Float
  age_lte: Float
  age_in: [Int!]
  isRequired_eq: Boolean
  isRequired_in: [Boolean!]
  rating_eq: Float
  rating_gt: Float
  rating_gte: Float
  rating_lt: Float
  rating_lte: Float
  rating_in: [Float!]
  magicId_eq: ID
  magicId_in: [ID!]
  bypassMagicId_eq: String
  bypassMagicId_contains: String
  bypassMagicId_startsWith: String
  bypassMagicId_endsWith: String
  bypassMagicId_in: [String!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
